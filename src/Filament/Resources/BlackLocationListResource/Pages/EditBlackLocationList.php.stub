<?php

namespace App\Filament\Resources\BlackLocationListResource\Pages;

use Filament\Actions;
use Illuminate\Database\Eloquent\Model;
use Filament\Resources\Pages\EditRecord;
use App\Filament\Resources\BlackLocationListResource;
use PermisologySystem\PermisologySystem\Models\PermisologySystem\BlackLocationList;

class EditBlackLocationList extends EditRecord
{
    protected static string $resource = BlackLocationListResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\DeleteAction::make(),
        ];
    }

    protected function mutateFormDataBeforeFill(array $data): array
    {
        // Cargar direcciones IP y DNS para el blacklist_name actual
        $data['ip_addresses'] = BlackLocationList::where('blacklist_name', $data['blacklist_name'])
            ->where('type_address', 'ip')
            ->pluck('address')
            ->toArray();

        $data['dns_addresses'] = BlackLocationList::where('blacklist_name', $data['blacklist_name'])
            ->where('type_address', 'dns')
            ->pluck('address')
            ->toArray();

        return $data;
    }

    protected function handleRecordUpdate(Model $record, array $data): Model
    {
        $blacklistName = $data['blacklist_name'];
        $ipAddresses = $data['ip_addresses'] ?? [];
        $dnsAddresses = $data['dns_addresses'] ?? [];

        // Eliminar registros actuales para este `blacklist_name`
        BlackLocationList::where('blacklist_name', $blacklistName)->delete();

        // Crear nuevos registros para cada IP
        foreach ($ipAddresses as $ip) {
            BlackLocationList::create([
                'blacklist_name' => $blacklistName,
                'type_address' => 'ip',
                'address' => $ip,
            ]);
        }

        // Crear nuevos registros para cada DNS
        foreach ($dnsAddresses as $dns) {
            BlackLocationList::create([
                'blacklist_name' => $blacklistName,
                'type_address' => 'dns',
                'address' => $dns,
            ]);
        }

        // Actualizar el `blacklist_name` en el registro actual
        $record->blacklist_name = $blacklistName;
        $record->save();

        return $record;
    }
}
